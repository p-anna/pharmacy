<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Logout</class>
 <widget class="QDialog" name="Logout">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>396</width>
    <height>218</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string/>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget {
   background-color: #f7c68f;
}

/* Nice Windows-XP-style password character. */
QLineEdit[echoMode=&quot;2&quot;] {
    lineedit-password-character: 9679;
}

/* We provide a min-width and min-height for push buttons
   so that they look elegant regardless of the width of the text. */
QPushButton {
    background-color: #c38e63;
    border-width: 2px;
    border-color: #c97842;
    border-style: solid;
    border-radius: 5;
    padding: 3px;
    min-width: 17ex;
    min-height: 2.5ex;
}

QPushButton:hover {
   background-color: #eaab81;
}

/* Increase the padding, so the text is shifted when the button is
   pressed. */
QPushButton:pressed {
    padding-left: 5px;
    padding-top: 5px;
    background-color: #db9f5c;
}

QLabel, QAbstractButton {
    font: bold;
}

/* Mark mandatory fields with a brownish color. */
.mandatory {
    color: brown;
}

/* Bold text on status bar looks awful. */
QStatusBar QLabel {
   font: normal;
}

QStatusBar::item {
    border-width: 1;
    border-color: darkkhaki;
    border-style: solid;
    border-radius: 2;
}

QComboBox, QLineEdit, QSpinBox, QTextEdit, QListView {
    background-color: cornsilk;
    selection-color: #0a214c; 
    selection-background-color: #C19A6B;
}

QComboBox::drop-down:hover {
    image: url(:/home/pharmacy/kucica.jpg);
}

QListView {
    show-decoration-selected: 1;
}

QListView::item:hover {
    background-color: wheat;
}

/* We reserve 1 pixel space in padding. When we get the focus,
   we kill the padding and enlarge the border. This makes the items
   glow. */
QLineEdit, QFrame {
    border-width: 2px;
    padding: 1px;
    border-style: solid;
    border-color: #db9f5c;
    border-radius: 5px;
}

/* As mentioned above, eliminate the padding and increase the border. */
QLineEdit:focus, QFrame:focus {
    border-width: 3px;
    padding: 0px;
}

/* A QLabel is a QFrame ... */
QLabel {
    border: none;
    padding: 0;
    background: none;
}

/* A QToolTip is a QLabel ... */
QToolTip {
    border: 2px solid #db9f5c;
    padding: 5px;
    border-radius: 3px;
    opacity: 200;
}

/* Nice to have the background color change when hovered. */
QRadioButton:hover, QCheckBox:hover {
    background-color: wheat;
}

/* Force the dialog's buttons to follow the Windows guidelines. */
QDialogButtonBox {
    button-layout: 0;
}

/*-------------------------------------------------------------------------------------------Menu bar------------------------------------------------------------------------------------------------------ --*/
QMenuBar {
    background-color: qlineargradient(x1:0, y1:0, x2:0, y2:1, stop:0 #d68844, stop:1 #a56126); /*svetli braon,  tamni braon*/
}

QMenuBar::item {
    spacing: 3px; /* spacing between menu bar items */
    padding: 5px 4px;
    background: #db9f6f;
    border-radius: 4px;
    color: #593920;
}

QMenuBar::item:selected { /* when selected using mouse or keyboard */
    background: #f2c196; /* boja koze */
}

QMenuBar::item:pressed {
    background: #8c7252; /* sivi braon */
}

/*--------------------------------------------------------------------------------Menu ----------------------------------------------------------------------------------------------------------------------*/
QMenu {
    background-color: #f7c68f; /* sets background of the menu */
    border: 1px solid black;
}

QMenu::item {
    /* sets background of menu item. set this to something non-transparent
        if you want menu color and menu item color to be different */
    background-color: #f2ca9d;
}

QMenu::item:selected { /* when user selects item using mouse or keyboard */
    background-color: #a36c35;
}
</string>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout" stretch="1,0">
   <item>
    <widget class="QLabel" name="label">
     <property name="font">
      <font>
       <pointsize>14</pointsize>
       <weight>75</weight>
       <italic>false</italic>
       <bold>true</bold>
      </font>
     </property>
     <property name="text">
      <string>Izaberite vrstu izlaza 

iz programa</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
   </item>
   <item>
    <layout class="QHBoxLayout" name="horizontalLayout">
     <item>
      <spacer name="horizontalSpacer_2">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>40</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <widget class="QPushButton" name="pushButton_2">
       <property name="text">
        <string>Kraj radnog dana</string>
       </property>
      </widget>
     </item>
     <item>
      <spacer name="horizontalSpacer">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>40</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
     <item>
      <widget class="QPushButton" name="pushButton">
       <property name="text">
        <string>Kraj smene</string>
       </property>
      </widget>
     </item>
     <item>
      <spacer name="horizontalSpacer_3">
       <property name="orientation">
        <enum>Qt::Horizontal</enum>
       </property>
       <property name="sizeHint" stdset="0">
        <size>
         <width>40</width>
         <height>20</height>
        </size>
       </property>
      </spacer>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <resources/>
 <connections/>
</ui>
